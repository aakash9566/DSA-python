class Queue:
    def __init__(self):
        self.queue=[]
    def is_empty(self):
        return len(self.queue)==0
    def en(self,item):
        self.queue.append(item)
    def de(self):
        if self.is_empty():
            raise IndexError("queue is empty")
        return self.queue.pop(0)
    def size(self):
        return len(self.queue)
def is_p(s):
    queue=Queue()
    for ch in s:
        queue.en(ch)
    while queue.size()>1:
        if queue.de()!=queue.queue[-1]:
            return False
        queue.queue.pop()
    return True
t="radar"
if is_p(t):
    print(f"{t} is a palindrome")
else:
    print(f"{t} is not a palindrome")
t="hello"
if is_p(t):
    print(f"{t} is a palindrome")
else:
    print(f"{t} is not a palindrome")

